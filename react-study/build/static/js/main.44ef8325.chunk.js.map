{"version":3,"sources":["components/Toc.js","components/ReadContent.js","components/Subject.js","components/Control.js","components/CreatContent.js","components/UpdateContent.js","App.js","serviceWorker.js","index.js"],"names":["Toc","nextProps","nextState","data","this","props","lists","i","_id","id","_className","selected_id","push","key","href","onClick","e","preventDefault","onChangePage","className","title","length","Component","ReadContent","desc","Subject","sub","Control","onChangeMode","type","CreatContent","action","method","onSubmit","tar","target","value","name","placeholder","required","UpdateContent","state","inputFormHandler","bind","setState","onChange","App","mode","subject","welcome","contents","_title","_desc","_article","_content","getReadContent","_contents","concat","Array","from","Number","window","confirm","splice","getContent","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.44ef8325.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Toc extends Component {\n\tshouldComponentUpdate(nextProps, nextState) {\n\t\tif (nextProps.data === this.props.data){\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\trender() {\n\t\tconst lists = [];\n\t\tconst data = this.props.data;\n\t\tlet i = 0;\n\t\twhile (i < data.length) {\n\t\t\tconst _id = data[i].id;\n\t\t\tconst _className = this.props.selected_id === _id;\n\t\t\tlists.push(\n\t\t\t\t<li key={_id}>\n\t\t\t\t\t<a href={\"/content/\" + _id}\n\t\t\t\t\t\tonClick={e => {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\tthis.props.onChangePage(_id);\n\t\t\t\t\t\t}} \n\t\t\t\t\t\tclassName={_className ? 'selected' : null}\n\t\t\t\t\t>{data[i].title}</a>\n\t\t\t\t</li>\n\t\t\t);\n\t\t\ti += 1;\n\t\t}\n\t\treturn (\n\t\t\t<nav>\n\t\t\t\t<ul>\n\t\t\t\t\t{lists}\n\t\t\t\t</ul>\n\t\t\t</nav>\n\t\t);\n\t}\n}\n\nexport default Toc;","import React from 'react';\n\nfunction ReadContent(props) {\n\treturn (\n\t\t<article>\n\t\t\t<h2>{props.title}</h2>\n\t\t\t<p>{props.desc}</p>\n\t\t</article>\n\t);\n}\n\nexport default ReadContent;","import React from 'react';\n\nfunction Subject(props) {\n\treturn (\n\t\t<header>\n\t\t\t<h1><a href=\"/\" onClick={(e)=>{\n\t\t\t\te.preventDefault();\n\t\t\t\tprops.onChangePage();\n\t\t\t}}>{props.title}</a></h1>\n\t\t\t<p>{props.sub}</p>\n\t\t</header>\n\t);\n}\n\nexport default Subject;","import React from 'react';\n\nfunction Control(props) {\n\treturn (\n\t\t<ul>\n\t\t\t<li><a href=\"/create\" onClick={e=>{\n\t\t\t\te.preventDefault();\n\t\t\t\tprops.onChangeMode('create');\n\t\t\t}}>create</a></li>\n\t\t\t<li><a href=\"/update\" onClick={e => {\n\t\t\t\te.preventDefault();\n\t\t\t\tprops.onChangeMode('update');\n\t\t\t}}>update</a></li>\n\t\t\t<li><button type=\"button\" onClick={e => {\n\t\t\t\tprops.onChangeMode('delete');\n\t\t\t}}>delete</button></li>\n\t\t</ul>\n\t);\n}\n\nexport default Control;","import React from 'react';\n\nfunction CreatContent(props) {\n\treturn (\n\t\t<article>\n\t\t\t<h2>Creat</h2>\n\t\t\t<form action=\"/create_process\" method=\"post\"\n\t\t\t\tonSubmit={e=>{\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tconst tar = e.target;\n\t\t\t\t\tprops.onSubmit(tar.title.value,tar.desc.value);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<p><input type=\"text\" name=\"title\" placeholder=\"title\" required /></p>\n\t\t\t\t<p><textarea name=\"desc\" placeholder=\"description\" required></textarea></p>\n\t\t\t\t<p><button type=\"submit\">Submit</button></p>\n\t\t\t</form>\n\t\t</article>\n\t);\n}\n\nexport default CreatContent;","import React, { Component } from 'react';\n\nclass UpdateContent extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tid: this.props.data.id,\n\t\t\ttitle: this.props.data.title,\n\t\t\tdesc: this.props.data.desc\n\t\t}\n\t\tthis.inputFormHandler = this.inputFormHandler.bind(this)\n\t}\n\tinputFormHandler(e){\n\t\tthis.setState({[e.target.name]:e.target.value })\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<article>\n\t\t\t\t<h2>Update</h2>\n\t\t\t\t<form action=\"/create_process\" method=\"post\"\n\t\t\t\t\tonSubmit={e => {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tthis.props.onSubmit(\n\t\t\t\t\t\t\tthis.state.id,\n\t\t\t\t\t\t\tthis.state.title,\n\t\t\t\t\t\t\tthis.state.desc\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<input type=\"hidden\" name=\"id\" value={this.state.id} />\t\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\t\tplaceholder=\"title\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tvalue={this.state.title}\n\t\t\t\t\t\t\tonChange={this.inputFormHandler}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\tname=\"desc\"\n\t\t\t\t\t\t\tplaceholder=\"description\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tvalue={this.state.desc}\n\t\t\t\t\t\t\tonChange={this.inputFormHandler}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</p>\n\t\t\t\t\t<p><button type=\"submit\">Submit</button></p>\n\t\t\t\t</form>\n\t\t\t</article>\n\t\t);\n\t}\n}\n\n/* function UpdateContent(props) {\n\treturn (\n\t\t<article>\n\t\t\t<h2>Update</h2>\n\t\t\t<form action=\"/create_process\" method=\"post\"\n\t\t\t\tonSubmit={e=>{\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tconst tar = e.target;\n\t\t\t\t\tprops.onSubmit(tar.title.value,tar.desc.value);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<p><input type=\"text\" name=\"title\" placeholder=\"title\" required value={props.data.title} /></p>\n\t\t\t\t<p><textarea name=\"desc\" placeholder=\"description\" required value={props.data.desc} ></textarea></p>\n\t\t\t\t<p><button type=\"submit\">Submit</button></p>\n\t\t\t</form>\n\t\t</article>\n\t);\n} */\n\nexport default UpdateContent;","import React, { Component } from 'react';\nimport Toc from './components/Toc';\nimport ReadContent from './components/ReadContent';\nimport Subject from './components/Subject';\nimport Control from './components/Control';\nimport CreatContent from './components/CreatContent';\nimport UpdateContent from './components/UpdateContent';\nimport './App.css';\n// import { Button } from 'react-bootstrap';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mode:'welcome',\n      // mode:'create',\n      selected_id: 0,\n      subject: { title: 'WEB', sub:'Hello World!'},\n      welcome: { title: 'Welcome', desc:'Hello React!'},\n      contents:[\n        { id: 1, title: 'HTML', desc:'HTML is HyperText Markup Language.'},\n        { id: 2, title: 'CSS', desc:'CSS is for design'},\n        { id: 3, title: 'JavaScript', desc:'JavaScript is for interactive'}\n      ]\n    }\n  }\n  getReadContent() {\n    let i = 0;\n    while (i < this.state.contents.length) {\n      var data = this.state.contents[i];\n      if (data.id === this.state.selected_id) {\n        return data;\n      }\n      i += 1;\n    }\n  }\n  getContent() {\n    let _title, _desc, _article = null;\n    if (this.state.mode === 'welcome') {\n      _title = this.state.welcome.title;\n      _desc = this.state.welcome.desc;\n      _article = <ReadContent title={_title} desc={_desc} />\n    } else if (this.state.mode === 'read') {\n      const _content = this.getReadContent();\n      _article = <ReadContent title={_content.title} desc={_content.desc} />\n    } else if (this.state.mode === 'create') {\n      _article = <CreatContent onSubmit={(_title, _desc) => {\n        const _id = this.state.contents.length + 1;\n        const _contents = this.state.contents.concat({\n            id: _id,\n            title:_title,\n            desc:_desc\n        })\n        this.setState({\n          contents: _contents,\n          mode: 'read',\n          selected_id: _id\n        })\n      }} />\n    } else if (this.state.mode === 'update') {\n      const _content = this.getReadContent();\n      _article = <UpdateContent data={_content} onSubmit={(_id, _title, _desc) => {\n        const _contents = Array.from(this.state.contents);\n        let i = 0;\n        while (i < _contents.length){\n          if (_contents[i].id === _id){\n            _contents[i] = {\n              id:_id,\n              title:_title,\n              desc:_desc\n            }\n            break;\n          }\n          i++;\n        }\n        this.setState({\n          contents: _contents,\n          mode:'read'\n        })\n      }} />\n    } else if (this.state.mode === 'delete') {\n      \n    }\n    return _article;\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Subject\n          title={this.state.subject.title}\n          sub={this.state.subject.sub}\n          onChangePage = {()=>{\n            this.setState({\n              mode: 'welcome',\n              selected_id: 0\n            })\n          }}\n        />\n        <Toc\n          data={this.state.contents}\n          selected_id={this.state.selected_id}\n          onChangePage = {id=>{\n            this.setState({\n              mode: 'read',\n              selected_id:Number(id)\n            })\n          }}\n        />\n        <Control onChangeMode={mode=>{\n          if (mode ==='delete'){\n            if(window.confirm('삭제하시겠습니까?')){\n              const _contents = Array.from(this.state.contents);\n              let i = 0;\n              while (i < _contents.length) {\n                if (_contents[i].id === this.state.selected_id) {\n                  _contents.splice(i, 1);\n                  break;\n                }\n                i++;\n              }\n              this.setState({\n                contents: _contents,\n                mode: 'welcome'\n              })\n            }\n          }else{\n            this.setState({\n              mode: mode\n            })\n          }\n        }} />\n        {this.getContent()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}